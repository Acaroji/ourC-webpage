{"version":3,"sources":["components/NavBar.js","components/LandingNavbar.js","components/Login.js","components/Messages.js","components/Home.js","components/Landing.js","components/SignUp.js","components/Memories.js","components/Recipies.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","src","alt","Link","to","Component","LandingNavbar","class","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeStateUsername","event","setState","username","target","value","changeStatePassword","password","sendToServer","axios","concat","config","baseURL","method","data","state","then","result","props","setLoggedIn","console","log","catch","err","components_LandingNavbar","type","placeholder","name","onChange","onClick","Messages","handleChange","_event$target","defineProperty","handleClick","submitMessages","preventDefault","currentMessages","messages","newMessage","from","message","withCredentials","push","_this$state","map","oneMessage","components_NavBar","id","onSubmit","for","Home","characters","_this2","get","allMessages","Landing","Signup","changeStateEmail","email","changeStateCountry","country","signedUp","Redirect","Memories","submitMemories","currentMemories","memories","newMemory","remember","photo","allMemories","oneMemory","Recipies","App","setPage","page","currentPage","logged","loggedIn","setSignedUp","signed","Route","exact","path","component","render","components_Login","SignUp","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7a155a7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\n\n\n\nclass NavBar extends Component {\n   \n    render() { \n        return ( \n            <nav className=\"navbar navbar-default navbar-expand-lg\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                         <img src='./images/world.png' alt=\"logo\" />\n                    </div>\n                </div>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/home\"> Home </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/messages\">Messages</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to =\"/recipies\">Recipies</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/memories\">Memories</Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to=\"/logout\">Log Out</Link>\n                    </li>\n                </ul> \n            </nav>\n     \n    );\n    }\n}\n \nexport default NavBar;\n\n","import React,{ Component } from 'react'\nimport { Link } from \"react-router-dom\"\n\nclass LandingNavbar extends Component {\n    render() { \n        return ( \n            <nav class=\"navbar navbar-default navbar-expand-lg\">\n                <div class=\"container-fluid\">\n                    <div class=\"navbar-header\">\n                        <img src='./images/world.png' alt=\"logo\" />\n                    </div>\n                </div>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/login\">Log In</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to =\"/signup\">Sign Up</Link>\n                   </li>\n                    \n                </ul> \n            </nav>\n\n         );\n    }\n}\n \nexport default LandingNavbar;\n","import React,{ Component } from 'react'\nimport axios from 'axios'\nimport LandingNavbar from './LandingNavbar';\nimport config from '../config'\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state = {\n            username:'',\n            password:'',\n        }\n    }\n    changeStateUsername =(event)=>{\n        this.setState({username: event.target.value})    \n    }\n    changeStatePassword =(event)=>{\n        this.setState({password: event.target.value})\n    }\n    sendToServer = () =>{\n        debugger\n        axios(`${config.baseURL}login`,{\n            method:'POST',\n            data:{\n                username:this.state.username,\n                password:this.state.password,\n            }\n        })\n        .then((result)=> {\n           debugger\n            this.props.setLoggedIn(true)\n            console.log('result sendToServer', result)\n        })\n        .catch((err)=> console.log(err))\n    }\n    render(){\n        return(\n            <div>\n                <LandingNavbar />\n                <div className=\"form-wrapper\">\n                    <h1>Log In</h1>\n                <form>\n                    <div className=\"form-item\">\n                        <input type ='text' placeholder=\"username\" name ='username' onChange ={this.changeStateUsername} />\n                    </div>\n                    <div className=\"form-item\">\n                        <input type ='text' placeholder=\"password\" name ='password' onChange = {this.changeStatePassword} />\n                    </div>\n                    <div className=\"button-panel\">\n                        <input type=\"button\" className=\"button\" value=\"Submit\" onClick ={this.sendToServer} />\n                    </div>    \n                </form>    \n                </div>\n            </div>\n        )\n    } \n\n}\n \nexport default Login;","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport axios from 'axios'\nimport config from '../config'\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: '',\n            message: '',\n            messages:[]\n        };\n    }\n    \n    // We need 2 functions. \n    // - One that allows us to handle the changes on the input fields\n    handleChange = event => {\n        console.log(event.target.name)\n        const { name, value } = event.target;\n\n        this.setState({\n            [name] : value\n        })\n    }\n\n    //remove messages\n    handleClick = event =>{\n\n    }\n\n    // - One that allows us to submit the data on the input fields\n    submitMessages = (event) => {\n        event.preventDefault();\n   \n       let currentMessages = this.state.messages\n       let newMessage = {\n           from:this.state.from,\n           message:this.state.message\n       }\n        console.log(config)\n       \n       axios(`${config.baseURL}messages/add`,{\n        method:'POST',\n        data:newMessage,\n        withCredentials:true\n    })\n    .then((result)=> {\n       \n        console.log(result)\n    })\n    .catch((err)=> {\n        \n        console.log(err)})\n    currentMessages.push(newMessage)\n       this.setState({messages:currentMessages, message:\"\", from:\"\"}, ()=>{\n           console.log(this.state) \n       })\n    }\n\n    render() { \n        const { from, message } = this.state;\n        let allMessages = this.state.messages.map(oneMessage =>{\n            return(\n                <div>\n                    <p>From: {oneMessage.from}</p>\n                    <p>Messages: {oneMessage.message}</p>\n               </div>\n            )\n        })\n        return ( \n            \n           <div> \n               <NavBar />\n               <div id=\"form-main\"> \n                    <p className=\"container-msg\">Write a message</p>     \n                    <div id=\"form-div\">       \n                    <form className=\"form\" id=\"form1\" onSubmit={this.submitMessages}>\n                        <label>From</label>\n                        <input className =\"feedback-input\" id=\"name\" type=\"text\" name=\"from\" value={this.state.from} onChange={this.handleChange} />\n                        <div className=\"text\">\n                            <label for=\"comment\">Message</label>\n                            <input className=\"feedback-input\" id=\"comment\" type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"submit-msg\">\n                            <input type=\"submit\" value=\"SEND\" id=\"button-blue\"/>\n                            <div className=\"ease\"></div>\n\n                        </div>\n                    </form>\n                    </div> \n                </div>\n                \n            </div> \n         );\n    }\n}\n \nexport default Messages;\n\n","import React, {Component} from 'react'\nimport Messages from './Messages';\nimport axios from 'axios';\nimport NavBar from './NavBar';\nimport config from '../config'\n\nclass Home extends Component{\n    state = {\n        characters : [],\n        messages:[]\n       \n    }\n    componentDidMount(){\n        axios.get(`${config.baseURL}messages/get`).then(result=>{\n            debugger\n            this.setState({messages:result.data})\n        })\n    }\n    \n\n    \n    render(){\n        const { characters } = this.state;\n        let allMessages = this.state.messages.map(oneMessage =>{\n            return(\n                <div className=\"messages-display\">\n                    <p>From: {oneMessage.from}</p>\n                    <p>Messages: {oneMessage.message}</p>\n               </div>\n            )\n        })\n  \n        return(\n            <div>\n                <NavBar />\n                <div className=\"welcome-msg\">\n                    <h2>Welcome, you have this Messages:</h2>\n                </div>\n                {allMessages}\n                \n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport LandingNavbar  from './LandingNavbar';\n\n\n\nclass Landing extends Component {\n  \n    render() { \n        return ( \n            <div>\n                < LandingNavbar />\n                <div className=\"landing-page\">\n                    <div className=\"connected-message\">Connected. No matter where you are.</div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            Keep all your good memories\n                            <img src=\"./images/photography.png\" alt=\"memories\" />\n                        </div>\n                    <div className=\"col-sm\">\n                            Search your favorites recipies\n                            <img src=\"./images/recipe-book (1).png\" alt=\"recipies\" />\n                    </div>\n                    <div className=\"col-sm\">\n                            Write a messages to your favorite persons\n                            <img src=\"./images/email (2).png\" alt=\"messages\" />\n                    </div>\n                        </div>\n                </div>\n            \n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Landing;","import React,{ Component } from 'react'\nimport axios from 'axios'\nimport {Redirect} from \"react-router-dom\"\nimport LandingNavbar from './LandingNavbar';\nimport config from '../config'\n\nclass Signup extends Component {\n    constructor(){\n        super()\n        this.state ={\n            username:'',\n            password:'',\n            email:'',\n            country:'',\n            signedUp: false\n        }\n    }\n    changeStateUsername =(event)=>{\n        this.setState({username: event.target.value}) \n        \n    }\n    changeStatePassword =(event)=>{\n        this.setState({password: event.target.value})    \n        \n    }\n    changeStateEmail =(event)=>{\n        this.setState({email: event.target.value})    \n       \n    }\n    changeStateCountry=(event)=>{\n        this.setState({country: event.target.value})   \n        \n    }\n    sendToServer =() =>{\n        \n        axios(`${config.baseURL}signup`,{\n            method:'POST',\n            data:{\n                username:this.state.username,\n                password:this.state.password,\n                email:this.state.email,\n                country:this.state.country,\n            }\n        })\n        .then((result)=> {\n            // this.props.setSignedUp(true)\n            console.log(result)\n            this.setState({signedUp: true})\n        })\n        .catch((err)=> console.log(err))   \n    }\n    render() { \n\n        if(!this.state.signedUp) {\n            return ( \n                <div>\n                    <LandingNavbar />\n                    <div className=\"form-wrapper\">\n                        <h1>Sign Up</h1>\n                        <form>   \n                            <div className=\"form-item\">\n                                <input type ='text' placeholder=\"username\" name ='username' onChange ={this.changeStateUsername} />\n                            </div>\n                            <div className=\"form-item\">\n                                <input type ='text' placeholder=\"password\" name ='password' onChange = {this.changeStatePassword} />\n                            </div>\n                            <div className=\"form-item\">\n                                <input type ='text' placeholder=\"email\" name ='email' onChange = {this.changeStateEmail} />\n                            </div>\n                            <div className=\"form-item\">\n                                <input type ='text' placeholder=\"country\" name ='country' onChange = {this.changeStateCountry} />\n                            </div>\n                            <div className=\"button-panel\">\n                                <input type=\"button\" className=\"button\" value=\"Submit\" onClick={this.sendToServer}/>\n                            </div>\n                            \n                        </form>    \n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        }\n    }\n}\n \nexport default Signup;","import  React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport axios from 'axios'\nimport config from '../config'\n\nclass Memories extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        remember:'',\n        photo:'',\n        memories:[]\n      };\n    }\n    componentDidMount(){\n      axios.get(`${config.baseURL}memories`).then(result=>{\n          debugger\n          this.setState({memories:result.data})\n      })\n  }\n  \n\n\n  handleChange = event => {\n    console.log(event.target.name)\n    const {name, value} = event.target;\n\n    this.setState({\n      [name]:value\n    })\n  }\n  \n  submitMemories =(event)=>{\n    event.preventDefault();\n\n    let currentMemories = this.state.memories\n    let newMemory = {\n      remember:this.state.remember,\n      photo:this.state.photo,\n    }\n    debugger\n    axios(`${config.baseURL}memories`, {\n     method:'POST',\n     data:newMemory\n    })\n    .then((result) =>{\n       console.log(result)\n       debugger\n      })\n    .catch((err)=>{console.log(err)\n    debugger\n    })\n    currentMemories.push(newMemory)\n      this.setState({memories:currentMemories, remember:\"\", photo:\"\"}, ()=>{\n        console.log(this.state)\n      })\n  }\n  render() {\n    const { photo, remember } =this.state;\n    let allMemories = this.state.memories.map(oneMemory =>{\n      // debugger\n      return(\n        <div  className =\"memories-display\">\n          <p>Memory:{oneMemory.remember}</p>\n          <p>Photo:{oneMemory.photo}</p>\n        </div>\n      )\n    })\n    return(\n      <div>\n        <NavBar />\n        {allMemories}\n        <div id=\"form-main\">\n          <p className=\"container-mm\">Do you remember when...?</p>\n          <div id=\"form-div\">\n          <form className=\"form\" id=\"form1\" onSubmit={this.submitMemories}>\n            <label>Memory</label>\n            <input className =\"feedback-input\" type=\"text\" name=\"remember\" value={this.state.remember} onChange={this.handleChange} />\n            <div className=\"text\">\n              <label for=\"comment\">Photo</label>\n              <input className=\"feedback-input\" id=\"comment\" type=\"text\" name=\"photo\" value={this.state.photo}  onChange={this.handleChange} />\n            </div>\n            <div className=\"submit-msg\">\n              <input type=\"submit\" value=\"SEND\" id=\"button-blue\"/>\n              <div className=\"ease\"></div>\n            </div>\n          </form>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\nexport default Memories;\n\n\n","import React,{ Component } from 'react';\nclass Recipies extends Component {\n    state = {  }\n    render() { \n        return (\n            <di>\n                <h1>holaaaaaaaa</h1>\n            </di>\n          );\n    }\n}\n \nexport default Recipies;\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Landing from \"./components/Landing\"\nimport SignUp from './components/SignUp';\nimport Memories from './components/Memories';\nimport Messages from './components/Messages';\nimport Recipies from './components/Recipies';\n\n// import LandingNavbar from './components/LandingNavbar';\n\n  \nclass App extends Component {\n\n  state = {\n    characters : []\n  }\n\n  constructor(){\n    super()\n    this.state={\n      currentPage:'home',\n      loggedIn:false,\n      signedUp:false\n    }\n  }\n  setPage=(page)=>{\n  \n    this.setState({currentPage:page})\n  }\n  setLoggedIn = (logged) =>{\n  \n    \n    this.setState({loggedIn:logged})\n    debugger\n  }\n  setSignedUp =(signed) =>{\n  \n    this.setState({signedUp:signed})\n    debugger\n  }\n  render(){ \n\nconsole.log(\"hello\")\n    return(\n      <div>\n        \n        <div className=\"content\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/memories\" component={Memories} />\n          <Route exact path=\"/messages\" component={Messages} />\n          <Route exact path=\"/recipies\" component={Recipies} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/login\" render={(props)=> {\n            return (<Login setLoggedIn={this.setLoggedIn}/>)\n          }} />\n\n          <Route exact path=\"/signup\" render={(props)=> {\n            return (<SignUp setSignedUp={this.setSignedUp}/>)\n          }} />\n          {this.state.signedUp ? <Redirect to=\"/home\" /> :<div></div>} \n          {this.state.loggedIn ? <Redirect to=\"/home\" /> : <div></div>}\n        </div> \n      </div>\n    )\n\n  }\n}\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}